name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [
          { rid: 'linux-x64', os: 'linux' },
          { rid: 'win-x64', os: 'windows' },
          { rid: 'osx-x64', os: 'macos-intel' },
          { rid: 'osx-arm64', os: 'macos-arm' }
        ]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Publish ${{ matrix.target.os }}
      run: |
        dotnet publish \
          --configuration Release \
          --runtime ${{ matrix.target.rid }} \
          --self-contained true \
          --output ./publish/${{ matrix.target.os }} \
          /p:PublishSingleFile=true \
          /p:PublishTrimmed=true
    
    - name: Create archive
      run: |
        cd ./publish/${{ matrix.target.os }}
        if [[ "${{ matrix.target.rid }}" == win-* ]]; then
          zip -r ../../hoho-${{ matrix.target.os }}.zip .
        else
          tar -czf ../../hoho-${{ matrix.target.os }}.tar.gz .
        fi
    
    - name: Generate checksum
      run: |
        if [[ "${{ matrix.target.rid }}" == win-* ]]; then
          sha256sum hoho-${{ matrix.target.os }}.zip > hoho-${{ matrix.target.os }}.sha256
        else
          sha256sum hoho-${{ matrix.target.os }}.tar.gz > hoho-${{ matrix.target.os }}.sha256
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hoho-${{ matrix.target.os }}
        path: |
          hoho-${{ matrix.target.os }}.*

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: release
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          hoho-*/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}